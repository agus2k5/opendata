<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
 
    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <context:component-scan base-package="com.z" /><!-- Auto scan the components --><!-- @Controller, @Service, @Configuration, etc. -->
    <mvc:annotation-driven/><!--Spring MVC--><!-- Enables the Spring MVC @Controller programming model -->
        
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/*"/> <!--excepción para buscar recursos -->
    <!--Resolve logical view names to .jsp resources in the /WEB-INF/views directory-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property><!--path de las vistas-->
        <property name="suffix">
            <value>.jsp</value>
        </property><!--extensión de las vistas-->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" /><!--manejador de expresiones-->
    </bean>
    
    <!-- Cargar archivo database.properties-->
     <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>properties.properties</value>
        </property>
    </bean>
    <!-- las variables lee desde database.properties-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- Hibernate session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate.dialect}</prop><!-- motor-->
        <prop key="hibernate.show_sql">${hibernate.show_sql}</prop><!-- mostrar queries por consola-->
      </props>
    </property>
    <property name="packagesToScan" value="com.z.models"/><!-- mapeará todas las clases que encuentre en el packete com.z.models-->
  </bean>
  <tx:annotation-driven /><!-- Clase encagada de manejar las sessiones a la bd-->
  <bean id="transactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager"
    p:sessionFactory-ref="sessionFactory">
  </bean>
 
</beans>